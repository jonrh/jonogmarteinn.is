# CircleCI 2.1 configuration file to do automatic builds & deploys, triggered on every git commit.
# Documentation: https://circleci.com/docs/2.0/configuration-reference/#section=configuration
version: 2.1

# Main entry point to the CircleCI config. When we push changes to the "master" branch in git the
# "production" workflow runs. If changes are pushed to the "dev" branch we run the "development"
# workflow. Commits to any other branch do not trigger any workflow.
#
# The work flows depend on the following environment variables defined in the CircleCI project:
#   + $CLOUDFRONT_ID: jonogmarteinn.is AWS CloudFront distribution ID for production
#   + $CLOUDFRONT_DEV_ID: dev.jonogmarteinn.is AWS CloudFront distribution ID for dev
workflows:
  version: 2 # Specify workflow version so we get deprecation warnings from CircleCI in the future
  production:
    jobs:
      - BuildDeploy:
          s3Bucket: "s3://jonogmarteinn.is/"
          cloudFrontID: $CLOUDFRONT_ID
          robotsTxt: "User-agent: *\nDisallow: " # Search engine crawling is enabled everywhere
          filters:
            branches:
              only: "master" # Only run this workflow when the "master" branch changes

  development:
    jobs:
      - BuildDeploy:
          s3Bucket: "s3://dev.jonogmarteinn.is/"
          cloudFrontID: $CLOUDFRONT_DEV_ID
          robotsTxt: "User-agent: *\nDisallow: /" # Search engine crawling is disabled everywhere
          filters:
            branches:
              only: "dev" # Only run this workflow when the "dev" branch changes

jobs:
  BuildDeploy:
    docker:
      - image: circleci/node:12.18

    parameters:
      # The URL of the AWS S3 bucket to deploy static assets to, example: "s3://jonogmarteinn.is/".
      s3Bucket:
        type: string
        default: ""
      # The AWS CloudFront distribution ID that should be invalidated once upload to S3 is complete.
      cloudFrontID:
        type: string
        default: ""
      # The contents of the robots.txt file in the root. A signal to search engines if we do not
      # want the site to be indexed. We want production to appear in search engines but not dev.
      robotsTxt:
        type: string
        default: ""

    steps:
      - checkout

#      - run:
#          name: Install AWS command line interface to be able to deploy to S3 and CloudFront later
#          # Installs the AWS command line interface v2 so we can deploy our frontend assets to S3
#          # and invalidate the CloudFront cache in later steps. Another option to do this would be
#          # to use the circleci/aws-cli orb but at the time of writing it can only install AWS cli
#          # v1. There are no API differences but v1 requires Python and a bunch of other stuff
#          # whereas AWS cli v2 is a self contained binary (faster and simpler to set up).
#          #
#          # https://circleci.com/docs/2.0/using-orbs/
#          # https://circleci.com/orbs/registry/orb/circleci/aws-cli
#          # https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-linux.html
#          command: |
#            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#            unzip awscliv2.zip
#            sudo ./aws/install
#            aws --version

      - run:
          name: Install AWS command line interface v1
          command: |
            sudo apt-get install python-dev
            curl -O https://bootstrap.pypa.io/get-pip.py
            python get-pip.py --user
            export PATH=~/.local/bin:$PATH
            pip install awscli --upgrade --user
            aws --version

      - run:
          name: Install Node dependencies with Yarn
          # --frozen-lockfile: for reproducible installs in continuous deployment setups
          command: yarn install --frozen-lockfile

      - run:
          name: Build GatsbyJS site, i.e. generate the public/ folder
          command: yarn run build

      - run:
          name: Generate the robots.txt file
          # Add a compliant robots.txt file to aids search engine optimization. jonogmarteinn.is
          # should be indexable but not dev.jonogmarteinn.is.
          command: printf "<<parameters.robotsTxt>>" > public/robots.txt

      - deploy:
          name: Upload the site to AWS S3
          # The first step is to synchronize the contents of the public/ folder to the
          # corresponding S3 bucket. Files that don't exist in the public/ folder are deleted in
          # the S3 bucket.
          #
          # The environment variable AWS_PAGER defined before the CloudFront commands is a
          # temporary fix for a bug in AWS cli v2. At the time of writing AWS cli v2 requires a
          # pager program, by default the command `less`. And lucky for us `less` is not available
          # in the CircleCI containers we run in. The good news is we can configure AWS cli to not
          # use any pager (the empty string "") and instead just print the entire output of results
          # out. For this case it's completely fine. See: https://github.com/aws/aws-cli/issues/5038
          #
          # Environment variables defined in the CircleCI project:
          #   + $CLOUDFRONT_ID: jonogmarteinn.is AWS CloudFront distribution ID for production
          #   + $CLOUDFRONT_DEV_ID: dev.jonogmarteinn.is AWS CloudFront distribution ID for dev
          command: aws s3 sync public/ <<parameters.s3Bucket>> --delete

      - deploy:
          name: Apply Cache-Control HTTP header to static assets that don't change
          command: |
            aws s3 cp <<parameters.s3Bucket>> <<parameters.s3Bucket>> \
              --recursive --exclude "*" \
              --include "static/*" \
              --include "*.css" \
              --include "*.js" \
              --metadata-directive REPLACE --cache-control "public, max-age=31536000, s-maxage=31536000, immutable"

            # Uncomment if gatsby-plugin-offline is used. Avoids caching the service worker file.
            #--exclude "sw.js"

      - deploy:
          name: Apply Cache-Control HTTP header to files that should not be cached
          command: |
            aws s3 cp <<parameters.s3Bucket>> <<parameters.s3Bucket>> \
              --recursive --exclude "*" \
              --include "*.html" \
              --include "page-data/*.json" \
              --include "app-data.json" \
              --metadata-directive REPLACE --cache-control "public, no-cache, s-maxage=31536000"

            # Uncomment if gatsby-plugin-offline is used. Avoids caching the service worker file.
            #--include "sw.js"

      - deploy:
          name: Invalidate the CloudFront cache
          # CloudFront is Amazon's content delivery network. The primary reason for why we use it
          # is to enable us to make the site available at our own domain (jonogmarteinn.is, etc)
          # and to be able to serve the site through HTTPS. A very nice secondary benefit is that
          # the site loads a lot faster and it is practically free to host (few cents per month).
          #
          # Because we have a continuous deployment setup we configure CloudFront to only fetch
          # from the origin (the S3 bucket) once. The content of the site doesn't change unless we
          # make changes in a git commit. This step notifies CloudFront that it should fetch and
          # cache a new copy of every asset.
          #
          # The environment variable AWS_PAGER defined before the CloudFront commands is a
          # temporary fix for a bug in AWS cli v2. At the time of writing AWS cli v2 requires a
          # pager program, by default the command `less`. And lucky for us `less` is not available
          # in the CircleCI containers we run in. The good news is we can configure AWS cli to not
          # use any pager (the empty string "") and instead just print the entire output of results
          # out. For this case it's completely fine. See: https://github.com/aws/aws-cli/issues/5038
          command: |
            AWS_PAGER="" aws cloudfront create-invalidation \
              --distribution-id <<parameters.cloudFrontID>> \
              --paths '/*'
